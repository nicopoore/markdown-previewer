{"version":3,"sources":["Editor.js","Previewer.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","props","handleChange","bind","event","this","dispatch","type","input","target","value","id","class","className","onChange","React","Component","connect","state","marked","require","setOptions","breaks","Previewer","dangerouslySetInnerHTML","__html","Header","href","rel","UPDATE","defaultState","store","createStore","action","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAGMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFL,E,yDAKNC,GACTC,KAAKJ,MAAMK,SAAS,CAChBC,KAAM,SACNC,MAAOJ,EAAMK,OAAOC,U,+BAIxB,OACI,sBAAKC,GAAG,gBAAgBC,MAAM,WAA9B,UACI,qBAAKC,UAAU,kBAAf,SACA,0CAEA,0BACAF,GAAG,SACHD,MAAOL,KAAKJ,MAAMO,MAClBM,SAAUT,KAAKH,aAAaC,KAAKE,e,GArB5BU,IAAMC,WAgCZC,eAJS,SAACC,GAAD,MAAY,CAChCV,MAAOU,EAAMV,SAGFS,CAAyBjB,GChClCmB,EAASC,EAAQ,IAEvBD,EAAOE,WAAW,CACdC,QAAQ,I,IAGNC,E,kDACF,WAAYtB,GAAQ,uCACVA,G,qDAMN,OACI,sBAAKU,GAAG,mBAAmBC,MAAM,WAAjC,UACI,qBAAKC,UAAU,kBAAf,SACA,2CAEA,qBAAKF,GAAG,UAAUa,wBAAyB,CAACC,OAAQN,EAAOd,KAAKJ,MAAMO,iB,GAb9DO,IAAMC,WAwBfC,eAJS,SAACC,GAAD,MAAY,CAChCV,MAAOU,EAAMV,SAGFS,CAAyBM,GCfzBG,E,kDAdX,WAAYzB,GAAQ,uCACVA,G,qDAIN,OACI,sBAAKU,GAAG,gBAAR,UACI,oBAAIA,GAAG,YAAP,gCACA,uBAAMA,GAAG,SAAT,gBAAqB,mBAAGA,GAAG,cAAcgB,KAAK,6CAA6ClB,OAAO,SAASmB,IAAI,sBAA1F,wC,GAThBb,IAAMC,W,OCIrBa,EAAS,SACTC,EAAe,CACnBtB,MAAM,yoCAyDR,IAAMuB,EAAQC,aAXd,WAAoD,IAA/Bd,EAA8B,uDAAtBY,EAAcG,EAAQ,uCACjD,OAAOA,EAAO1B,MACZ,KAAKsB,EACH,MAAO,CACLrB,MAAOyB,EAAOzB,OAElB,QACE,OAAOU,MAgBEgB,MAVf,WACE,OACE,eAAC,IAAD,CAAUH,MAAOA,EAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QC7DSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.260e94c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Editor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.props.dispatch({\r\n            type: 'UPDATE',\r\n            input: event.target.value,\r\n        })}\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"EditorWrapper\" class=\"main-div\">\r\n                <div className=\"main-div-header\">\r\n                <h3>Editor</h3>\r\n                </div>\r\n                <textarea \r\n                id=\"editor\"\r\n                value={this.props.input} \r\n                onChange={this.handleChange.bind(this)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    input: state.input\r\n})\r\n\r\nexport default connect(mapStateToProps)(Editor);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst marked = require('marked')\r\n\r\nmarked.setOptions({\r\n    breaks: true\r\n})\r\n\r\nclass Previewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"PreviewerWrapper\" class=\"main-div\">\r\n                <div className=\"main-div-header\">\r\n                <h3>Preview</h3>\r\n                </div>\r\n                <div id=\"preview\" dangerouslySetInnerHTML={{__html: marked(this.props.input)}}>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    input: state.input\r\n})\r\n\r\nexport default connect(mapStateToProps)(Previewer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"HeaderWrapper\">\r\n                <h1 id=\"app-title\">Markdown Previewer</h1>\r\n                <span id=\"credit\">by <a id=\"credit-name\" href=\"https://www.linkedin.com/in/nicolas-poore/\" target=\"_blank\" rel=\"noopener noreferrer\">Nicol√°s Poore</a></span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import './App.css';\nimport Editor from './Editor';\nimport Previewer from './Previewer';\nimport Header from './Header';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst UPDATE = 'UPDATE';\nconst defaultState = {\n  input: `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n      - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n2. Use just 1s if you want!\n3. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://dummyimage.com/100x80/6153CA/fff.jpg&text=image)\n`\n}\n\nfunction rootReducer(state = defaultState, action) {\n  switch(action.type) {\n    case UPDATE:\n      return {\n        input: action.input,\n      }\n    default:\n      return state\n  }\n}\n\nconst store = createStore(rootReducer)\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Header />\n      <Editor />\n      <Previewer />\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}